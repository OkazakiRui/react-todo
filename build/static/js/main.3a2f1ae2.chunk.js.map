{"version":3,"sources":["components/TaskItem.tsx","components/TaskList.tsx","components/TaskInput.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TaskItem","task","handleDone","handleDelete","className","done","onClick","type","defaultChecked","title","TaskList","tasks","setTasks","prev","map","t","id","filter","length","TaskInput","useState","inputTitle","setInputTitle","count","setCount","newTask","value","onChange","e","target","initialState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOA4BeA,EAnBc,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAChD,OACE,qBAAIC,UAAWH,EAAKI,KAAO,OAAS,GAApC,UACE,kCACE,uBACEC,QAAS,kBAAMJ,EAAWD,IAC1BM,KAAK,WACLH,UAAU,iBACVI,eAAgBP,EAAKI,OAEvB,sBAAMD,UAAU,iBAAhB,SAAkCH,EAAKQ,WAEzC,wBAAQH,QAAS,kBAAMH,EAAaF,IAAOG,UAAU,iBAArD,8BCkBSM,EA9Bc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/BV,EAAa,SAACD,GAClBW,GAAS,SAACC,GAAD,OACPA,EAAKC,KAAI,SAACC,GAAD,OAAQA,EAAEC,KAAOf,EAAKe,GAAd,2BAAwBf,GAAxB,IAA8BI,MAAOJ,EAAKI,OAASU,SAGlEZ,EAAe,SAACF,GACpBW,GAAS,SAACC,GAAD,OAAUA,EAAKI,QAAO,SAACF,GAAD,OAAOA,EAAEC,KAAOf,EAAKe,UAGtD,OACE,qBAAKZ,UAAU,QAAf,SACGO,EAAMO,QAAU,EACf,yEAEA,oBAAId,UAAU,YAAd,SACGO,EAAMG,KAAI,SAACb,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,WAAYA,EACZC,aAAcA,GAHTF,EAAKe,Y,OCoBTG,EAvCe,SAAC,GAAyB,IAAvBR,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACjBQ,mBAAS,IADQ,mBAC9CC,EAD8C,KAClCC,EADkC,OAE3BF,mBAAST,EAAMO,OAAS,GAFG,mBAE9CK,EAF8C,KAEvCC,EAFuC,KAQ/CC,EAAgB,CACpBT,GAAIO,EACJd,MAAOY,EACPhB,MAAM,GAWR,OACE,qBAAKD,UAAU,aAAf,SACE,sBAAKA,UAAU,QAAf,UACE,uBACEG,KAAK,OACLH,UAAU,QACVsB,MAAOL,EACPM,SAzBkB,SAACC,GACzBN,EAAcM,EAAEC,OAAOH,UA0BnB,wBAAQpB,QAjBO,WACO,IAAtBe,EAAWH,SACbM,EAASD,EAAQ,GACjBX,EAAS,GAAD,mBAAKD,GAAL,CAAYc,KACpBH,EAAc,MAamBlB,UAAU,iBAAzC,gCCjCF0B,G,MAAuB,CAC3B,CACEd,GAAI,EACJP,MAAO,mBACPJ,MAAM,GAER,CACEW,GAAI,EACJP,MAAO,yBACPJ,MAAM,KAeK0B,EAXE,WAAO,IAAD,EACKX,mBAASU,GADd,mBACdnB,EADc,KACPC,EADO,KAGrB,OACE,gCACE,cAAC,EAAD,CAAWD,MAAOA,EAAOC,SAAUA,IACnC,cAAC,EAAD,CAAUD,MAAOA,EAAOC,SAAUA,QCXzBoB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3a2f1ae2.chunk.js","sourcesContent":["import { VFC } from \"react\";\nimport { Task } from \"../types\";\n\ntype Props = {\n  task: Task;\n  handleDone: (task: Task) => void;\n  handleDelete: (task: Task) => void;\n};\n\nconst TaskItem: VFC<Props> = ({ task, handleDone, handleDelete }) => {\n  return (\n    <li className={task.done ? \"done\" : \"\"}>\n      <label>\n        <input\n          onClick={() => handleDone(task)}\n          type=\"checkbox\"\n          className=\"chackbox-input\"\n          defaultChecked={task.done}\n        />\n        <span className=\"chackbox-label\">{task.title}</span>\n      </label>\n      <button onClick={() => handleDelete(task)} className=\"btn is-deleate\">\n        削除\n      </button>\n    </li>\n  );\n};\n\nexport default TaskItem;\n","import { VFC } from \"react\";\nimport TaskItem from \"./TaskItem\";\nimport { Task } from \"../types\";\n\ntype Props = {\n  tasks: Task[];\n  setTasks: React.Dispatch<React.SetStateAction<Task[]>>;\n};\n\nconst TaskList: VFC<Props> = ({ tasks, setTasks }) => {\n  const handleDone = (task: Task) => {\n    setTasks((prev) =>\n      prev.map((t) => (t.id === task.id ? { ...task, done: !task.done } : t))\n    );\n  };\n  const handleDelete = (task: Task) => {\n    setTasks((prev) => prev.filter((t) => t.id !== task.id));\n  };\n\n  return (\n    <div className=\"inner\">\n      {tasks.length <= 0 ? (\n        \"登録されたTODOがありません\"\n      ) : (\n        <ul className=\"task-list\">\n          {tasks.map((task) => (\n            <TaskItem\n              key={task.id}\n              task={task}\n              handleDone={handleDone}\n              handleDelete={handleDelete}\n            />\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default TaskList;\n","import { VFC, useState } from \"react\";\nimport { Task } from \"../types\";\n\ntype Props = {\n  tasks: Task[];\n  setTasks: React.Dispatch<React.SetStateAction<Task[]>>;\n};\n\nconst TaskInput: VFC<Props> = ({ tasks, setTasks }) => {\n  const [inputTitle, setInputTitle] = useState(\"\");\n  const [count, setCount] = useState(tasks.length + 1);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputTitle(e.target.value);\n  };\n\n  const newTask: Task = {\n    id: count,\n    title: inputTitle,\n    done: false,\n  };\n\n  const handleSubmit = () => {\n    if (inputTitle.length !== 0) {\n      setCount(count + 1);\n      setTasks([...tasks, newTask]);\n      setInputTitle(\"\");\n    }\n  };\n\n  return (\n    <div className=\"input-form\">\n      <div className=\"inner\">\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={inputTitle}\n          onChange={handleInputChange}\n        />\n        <button onClick={handleSubmit} className=\"btn is-primary\">\n          追加\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskInput;\n","import { VFC, useState } from \"react\";\nimport TaskList from \"./components/TaskList\";\nimport TaskInput from \"./components/TaskInput\";\nimport { Task } from \"./types\";\nimport \"./App.css\";\n\nconst initialState: Task[] = [\n  {\n    id: 2,\n    title: \"次のTodo\",\n    done: false,\n  },\n  {\n    id: 1,\n    title: \"最初のTodo\",\n    done: true,\n  },\n];\n\nconst App: VFC = () => {\n  const [tasks, setTasks] = useState(initialState);\n\n  return (\n    <div>\n      <TaskInput tasks={tasks} setTasks={setTasks} />\n      <TaskList tasks={tasks} setTasks={setTasks} />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}